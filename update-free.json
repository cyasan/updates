{
  "version": "9.1.9",
  "update": [
    {
      "path": "plugins/searching/gmailstalk.js",
      "code": "/*\n*[ GMAIL PROFILE CHECKER ]*\n\n🧑‍💻 Script Code by Daffa\n*/\nconst axios = require('axios');\nconst cheerio = require('cheerio');\nconst checkGmail = async (email) => {\nreturn new Promise(async (resolve, reject) => {\ntry {\nconst username = email.split('@')[0];\nconst { data } = await axios.post(\n'https://gmail-osint.activetk.jp/',\nnew URLSearchParams({\nq: username,\ndomain: 'gmail.com'\n}),\n{\nheaders: {\n'Content-Type': 'application/x-www-form-urlencoded',\n'User-Agent': 'Postify/1.0.0'\n}\n}\n);\nconst $ = cheerio.load(data);\nconst text = $('pre').text();\nconst extract = (regex, defaultValue = 'Tidak ada', checkNotFound = false) => {\nconst result = (text.match(regex) || [null, defaultValue])[1].trim();\nreturn checkNotFound && result === 'Not found.' ? 'Tidak ada' : result;\n};\nresolve({\nstatus: 200,\nresult: {\nemail: email,\nphotoProfile: extract(/Custom profile picture !\\s*=>\\s*(.*)/, 'Tidak ada'),\nlastEditProfile: extract(/Last profile edit : (.*)/),\ngoogleID: extract(/Gaia ID : (.*)/),\nuserTypes: extract(/User types : (.*)/),\ngoogleChat: {\nentityType: extract(/Entity Type : (.*)/),\ncustomerID: extract(/Customer ID : (.*)/, 'Tidak ada', true)\n},\ngooglePlus: {\nenterpriseUser: extract(/Entreprise User : (.*)/)\n},\nmapsData: {\nprofilePage: extract(/Profile page : (.*)/)\n},\nipAddress: text.includes('Your IP has been blocked by Google') ? 'Di blokir oleh Google' : 'Aman',\ncalendar: text.includes('No public Google Calendar') ? 'Tidak ada' : 'Ada'\n}\n});\n} catch (error) {\nresolve({\nstatus: 404,\nmsg: 'Email tidak ditemukan atau terjadi kesalahan!'\n});\n}\n});\n};\nexports.run = {\nusage: ['gmailstalk'],\nhidden: [],\nuse: 'email@gmail.com',\ncategory: 'searching',\nasync: async (m, { func, mecha }) => {\nif (!m.args[0]) return m.reply(func.example(m.cmd, 'example@gmail.com'))\nif (!m.args[0].endsWith('@gmail.com')) return m.reply('Masukkan email Gmail yang valid!')\nawait checkGmail(m.args[0]).then(data => {\nif (data.status == 404) return m.reply(data.msg)\nlet txt = `乂  *GMAIL CHECKER*\\n`\ntxt += `\\n◦  *Email:* ${data.result.email}`\ntxt += `\\n◦  *Photo Profile:* ${data.result.photoProfile}`\ntxt += `\\n◦  *Last Edit:* ${data.result.lastEditProfile}`\ntxt += `\\n◦  *Google ID:* ${data.result.googleID}`\ntxt += `\\n◦  *User Types:* ${data.result.userTypes}`\ntxt += `\\n◦  *Entity Type:* ${data.result.googleChat.entityType}`\ntxt += `\\n◦  *Customer ID:* ${data.result.googleChat.customerID}`\ntxt += `\\n◦  *Enterprise User:* ${data.result.googlePlus.enterpriseUser}`\ntxt += `\\n◦  *Profile Page:* ${data.result.mapsData.profilePage}`\ntxt += `\\n◦  *IP Status:* ${data.result.ipAddress}`\ntxt += `\\n◦  *Calendar:* ${data.result.calendar}`\nmecha.reply(m.chat, txt, m)\n})\n},\nlimit: true\n}"
    }
  ],
  "remove": [
    "plugins/y.js"
  ]
}